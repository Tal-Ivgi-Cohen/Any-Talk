{"version":3,"sources":["cmps/Footer.jsx","assets/img/logo.jpeg","cmps/Header.jsx","cmps/Hero.jsx","pages/Home.jsx","services/httpService.js","services/userService.js","store/actions/userActions.js","assets/img/login.png","pages/Login.jsx","services/socketService.js","pages/Chat.jsx","assets/img/signup.jpg","pages/SignUp.jsx","routes.js","App.jsx","serviceWorkerRegistration.js","store/reducers/userReducer.js","store/store.js","reportWebVitals.js","index.js"],"names":["Footer","className","React","Component","Header","src","img","alt","to","Hero","Home","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","window","location","assign","userService","login","logout","signup","getUsers","remove","userId","update","getLoggedinUser","user","_id","_saveLocalUser","userCred","sessionStorage","clear","setItem","JSON","stringify","parse","getItem","loadUsers","dispatch","users","type","_Login","state","msg","loginCred","nickname","password","loginHandleChange","ev","target","name","value","setState","prevState","doLogin","preventDefault","userCreds","props","history","push","err","this","loginSection","onSubmit","onChange","placeholder","loggedInUser","fullname","onClick","mapDispatchToProps","Login","connect","userModule","socketService","socket","setup","io","reconnection","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","_Chat","txt","msgs","topic","addMsg","newMsg","changeTopic","sendMsg","from","handleChange","msgHandleChange","map","idx","Avatar","autoComplete","Chat","_SignUp","signupCred","signupHandleChange","doSignup","signupCreds","signupSection","routes","path","component","App","route","exact","Boolean","hostname","match","localLoggedinUser","loggedinUser","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","ReduxThunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"uPACaA,EAAb,uKAGQ,OACI,wBAAQC,UAAU,aAAlB,SACI,kFALhB,GAA4BC,IAAMC,WCDnB,MAA0B,kCCI5BC,EAAb,uKAGQ,OACI,yBAAQH,UAAU,aAAlB,UACI,qBAAKA,UAAU,OAAOI,IAAKC,EAAKC,IAAI,SACpC,gCACI,cAAC,IAAD,CAASC,GAAG,IAAZ,kBADJ,KAEI,cAAC,IAAD,CAASA,GAAG,QAAZ,kBAFJ,KAGI,cAAC,IAAD,CAASA,GAAG,SAAZ,6BATpB,GAA4BN,IAAMC,W,kBCArBM,EAAb,uKAGI,OACE,sBAAKR,UAAU,qBAAf,UACE,sBAAKA,UAAU,oBAAf,UACE,sDACF,cAAC,IAAD,CAASA,UAAU,YAAYO,GAAG,SAAlC,sBAGE,eAAC,IAAD,CAAUP,UAAU,kBAApB,UACE,qBAAKI,IAAI,+EAA+EE,IAAI,oBAC5F,qBAAKF,IAAI,qEAAqEE,IAAI,UAClF,qBAAKF,IAAI,yEAAyEE,IAAI,wBAblG,GAA0BL,IAAMC,WCAnBO,EAAb,uKAGQ,OACI,oCACI,qBAAKT,UAAU,eAAf,SACI,cAAC,EAAD,MAEJ,sBAAKA,UAAU,YAAf,UACA,4CAAc,gDACd,oFAVhB,GAA0BC,IAAMC,W,gDCF1BQ,EACA,QAIFC,E,OAAQC,EAAMC,OAAO,CACrBC,iBAAiB,IAGRC,EAAc,SACnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IAFxBF,EAAc,SAIlBC,EAAUC,GACX,OAAOC,EAAKF,EAAU,OAAQC,IALzBF,EAAc,SAOnBC,EAAUC,GACV,OAAOC,EAAKF,EAAU,MAAOC,IARxBF,EAAc,SAUhBC,EAAUC,GACb,OAAOC,EAAKF,EAAU,SAAUC,I,SAIzBC,E,8EAAf,WAAoBF,GAApB,+BAAAG,EAAA,6DAA8BC,EAA9B,+BAAuC,MAAOH,EAA9C,+BAAqD,KAArD,kBAE0BN,EAAM,CACpBU,IAAI,GAAD,OAAKX,GAAL,OAAgBM,GACnBI,SACAH,OACAK,OAAoB,QAAXF,EAAoBH,EAAO,OANhD,cAEcM,EAFd,yBAQeA,EAAIN,MARnB,sCAUQO,QAAQC,IAAR,qBAA0BL,EAA1B,yCAAiEJ,EAAjE,wBAAyFC,IACzFO,QAAQE,IAAR,MACI,KAAIC,UAAoC,MAAxB,KAAIA,SAASC,QAC7BC,OAAOC,SAASC,OAAO,YAbnC,+D,sBCxBO,IAAMC,EAAc,CACvBC,M,4CACAC,O,2CACAC,O,4CACAC,SAQJ,WACI,OAAOrB,EAAA,SARPsB,OAWJ,SAAgBC,GACZ,OAAOvB,EAAA,eAA2BuB,KAXlCC,O,4CACAC,mB,4CAaJ,WAAsBC,GAAtB,SAAAtB,EAAA,sEACiBJ,EAAA,eAAwB0B,EAAKC,KAAOD,GADrD,OACIA,EADJ,OAEQD,IAAkBE,MAAQD,EAAKC,KAAKC,EAAeF,GAF3D,4C,kEAKA,WAAqBG,GAArB,eAAAzB,EAAA,sEACuBJ,EAAiB,aAAc6B,GADtD,YACUH,EADV,iDAEqBE,EAAeF,IAFpC,4C,kEAIA,WAAsBG,GAAtB,eAAAzB,EAAA,sEACuBJ,EAAiB,cAAe6B,GADvD,YACUH,EADV,iDAEqBE,EAAeF,IAFpC,4C,kEAIA,sBAAAtB,EAAA,6DACI0B,eAAeC,QADnB,SAEiB/B,EAAiB,eAFlC,oF,sBAIA,SAAS4B,EAAeF,GAEpB,OADAI,eAAeE,QAAQ,eAAgBC,KAAKC,UAAUR,IAC/CA,E,SAGID,E,8EAAf,WAA+BF,GAA/B,SAAAnB,EAAA,+EACW6B,KAAKE,MAAML,eAAeM,QAAQ,kBAD7C,4C,sBC1CO,SAASC,IACd,8CAAO,WAAMC,GAAN,eAAAlC,EAAA,+EAEiBa,EAAYI,WAF7B,OAEGkB,EAFH,OAGHD,EAAS,CAAEE,KAAM,YAAaD,UAH3B,gDAKH9B,QAAQC,IAAI,gCAAZ,MALG,yDAAP,sDDSFI,OAAOG,YAAcA,EEZN,UAA0B,kCCUnCwB,E,4MACJC,MAAQ,CACNC,IAAK,GACLC,UAAW,CACTC,SAAU,GACVC,SAAU,K,EAQdC,kBAAoB,SAAAC,GAAO,IAAD,EACAA,EAAGC,OAAnBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BT,UAAU,2BACLS,EAAUT,WADN,kBAENM,EAAOC,S,EAKdG,Q,uCAAU,WAAMN,GAAN,qBAAA5C,EAAA,yDACR4C,EAAGO,iBACKX,EAAc,EAAKF,MAAnBE,UACAC,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SACbD,EAJG,yCAKC,EAAKO,SAAS,CAAET,IAAK,2BALtB,OAOFa,EAAY,CAAEX,WAAUC,YAC9B,IACE,EAAKW,MAAMvC,MAAMsC,GACjB,EAAKJ,SAAS,CAAER,UAAW,CAAEC,SAAU,GAAIC,SAAU,MACrD,EAAKW,MAAMC,QAAQC,KAAK,SACxB,MAAOC,GACP,EAAKR,SAAS,CAAET,IAAK,6BAbf,2C,wHAbRkB,KAAKJ,MAAMpB,c,+BA+BX,IAAIyB,EACF,oCACE,qBAAK7E,UAAU,aAAf,SACE,uBAAM8E,SAAUF,KAAKP,QAArB,UACE,uBACEd,KAAK,OACLU,KAAK,WACLC,MAAOU,KAAKnB,MAAME,UAAUC,SAC5BmB,SAAUH,KAAKd,kBACfkB,YAAY,WACZhF,UAAU,eAEZ,uBACEiE,KAAK,WACLV,KAAK,WACLW,MAAOU,KAAKnB,MAAME,UAAUE,SAC5BkB,SAAUH,KAAKd,kBACfkB,YAAY,WACZhF,UAAU,eAEZ,wBAASA,UAAU,YAAnB,wBAGJ,qBAAKA,UAAU,SAAf,SACE,cAAC,IAAD,CAASA,UAAU,aAAaO,GAAG,UAAnC,qCAKE0E,EAAiBL,KAAKJ,MAAtBS,aACR,OACE,sBAAKjF,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,mBACA,qBAAKA,UAAU,YAAf,SACE,qBAAKI,IAAKC,EAAKC,IAAI,gBAErB,4BAAIsE,KAAKnB,MAAMC,MACduB,GACC,sBAAKjF,UAAU,aAAf,UACE,8BACE,0CACWiF,EAAaC,cAG1B,wBAAQlF,UAAU,aAAamF,QAASP,KAAKJ,MAAMtC,OAAnD,wBAGF+C,GAAgBJ,S,GAxFL3E,aAoGfkF,EAAqB,CACzBnD,MF1EK,SAAesC,GACpB,8CAAO,WAAMlB,GAAN,eAAAlC,EAAA,+EAEgBa,EAAYC,MAAMsC,GAFlC,QAEG9B,EAFH,SAIDY,EAAS,CAAEE,KAAM,QAASd,SAJzB,gDAOHjB,QAAQC,IAAI,4BAAZ,MAPG,yDAAP,uDE0EAS,OFrDK,WACL,8CAAO,WAAMmB,GAAN,SAAAlC,EAAA,+EAEGa,EAAYE,SAFf,OAGHmB,EAAS,CAAEE,KAAM,WAHd,+CAKH/B,QAAQC,IAAI,6BAAZ,MALG,wDAAP,uDEqDA2B,aAGWiC,EAAQC,aAZG,SAAA7B,GACtB,MAAO,CACLH,MAAOG,EAAM8B,WAAWjC,MACxB2B,aAAcxB,EAAM8B,WAAWN,gBASWG,EAAzBE,CAA6C9B,G,2BC3GpDgC,EAOd,WACE,IAAIC,EAAS,KACPD,EAAgB,CACdE,MADc,WACL,OAAD,wGACRD,EADQ,iEAEN1E,EAAgB,iBAFV,OAGZ0E,EAASE,IAd0C,GAc9B,CAAEC,cAAc,KACrB,EAJJ,8CAMRC,GAPc,SAOXC,EAAWC,GAAK,OAAD,uGACjBN,EADiB,gCACHD,EAAcE,QADX,OAEtBD,EAAOI,GAAGC,EAAWC,GAFC,8CAIlBC,IAXc,SAWVF,GAAqB,IAAD,gIAATC,EAAS,+BAAN,KACjBN,EADuB,gCACTD,EAAcE,QADL,OAEvBK,EACAN,EAAOO,IAAIF,EAAWC,GADlBN,EAAOQ,mBAAmBH,GAFP,8CAKxBI,KAhBc,SAgBTJ,EAAW7E,GAAO,OAAD,uGACrBwE,EADqB,gCACPD,EAAcE,QADP,OAE1BD,EAAOS,KAAKJ,EAAW7E,GAFG,8CAI5BkF,UApBoB,WAqBlBV,EAAS,MACO,IAGpB,OAAOD,EAlCqBY,GAE9BvE,OAAO2D,cAAgBA,E,uBCLjBa,G,4MACJ5C,MAAQ,CACNC,IAAK,CAAE4C,IAAK,IACZC,KAAM,GACNC,MAAO,I,EAcTC,OAAS,SAAAC,GACP,EAAKvC,UAAS,SAAAC,GAAS,MAAK,CAAEmC,KAAK,GAAD,mBAAMnC,EAAUmC,MAAhB,CAAsBG,S,EAG1DC,YAAc,WACZnB,EAAcU,KAAK,aAAc,EAAKzC,MAAM+C,Q,EAG9CI,QAAU,SAAA7C,GAAO,IAAD,EACdA,EAAGO,iBACH,IAAMuC,GAAM,YAAKrC,MAAMS,oBAAX,eAAyBrB,WAAW,KAChD4B,EAAcU,KAAK,cAAe,CAAEW,OAAMP,IAAK,EAAK7C,MAAMC,IAAI4C,MAC9D,EAAKnC,SAAS,CAAET,IAAK,CAAEmD,KAAM,KAAMP,IAAK,O,EAG1CQ,aAAe,SAAA/C,GAAO,IAAD,EACKA,EAAGC,OAAnBC,EADW,EACXA,KAAMC,EADK,EACLA,MACd,EAAKC,SAAL,eAAiBF,EAAOC,GAAS,EAAKyC,c,EAGxCI,gBAAkB,SAAAhD,GAAO,IAAD,EACEA,EAAGC,OAAnBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACd,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLV,IAAI,2BACCU,EAAUV,KADZ,kBAEAO,EAAOC,S,kEApCdsB,EAAcE,QACdF,EAAcU,KAAK,aAActB,KAAKnB,MAAM+C,OAC5ChB,EAAcK,GAAG,cAAejB,KAAK6B,U,6CAIrCjB,EAAcQ,IAAI,cAAepB,KAAK6B,QACtCjB,EAAcW,c,+BAoCd,OACE,sBAAKnG,UAAU,OAAf,UACE,8BAAG,4CAAH,WACA,sBAAKA,UAAU,aAAf,UACE,sEACA,kCACE,uBACEuD,KAAK,QACLU,KAAK,QACLC,MAAM,SACNa,SAAUH,KAAKkC,eALnB,eAUF,cAAC,IAAD,CAAgB9G,UAAU,WAA1B,SACG4E,KAAKnB,MAAM8C,KAAKS,KAAI,SAACtD,EAAKuD,GAAN,OACnB,6BACE,sBAAKjH,UAAU,UAAf,UACA,cAACkH,GAAA,EAAD,CAAQlH,UAAU,WAClB,uBAAMA,UAAU,cAAhB,cAAgC0D,EAAImD,KAApC,MAA6CnD,EAAI4C,IAAjD,WAHOW,QAQb,uBAAMjH,UAAU,YAAY8E,SAAUF,KAAKgC,QAA3C,UACE,uBACErD,KAAK,OACL4D,aAAa,MACbnH,UAAU,aACVkE,MAAOU,KAAKnB,MAAMC,IAAI4C,IACtBvB,SAAUH,KAAKmC,gBACf9C,KAAK,MACLe,YAAY,kBAEd,oD,GAtFU9E,aAqGPkH,GAAO9B,aARI,SAAA7B,GACtB,MAAO,CACLwB,aAAcxB,EAAM8B,WAAWN,gBAGR,GAGPK,CAA6Ce,IC3GlD,OAA0B,mCCQnCgB,G,4MACF5D,MAAQ,CACJ6D,WAAY,CACR1D,SAAU,GACVC,SAAU,GACVqB,SAAU,K,EAQlBqC,mBAAqB,SAAAxD,GAAO,IAAD,EACCA,EAAGC,OAAnBC,EADe,EACfA,KAAMC,EADS,EACTA,MACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBkD,WAAW,2BACJlD,EAAUkD,YADP,kBAELrD,EAAOC,S,EAKpBsD,S,uCAAW,WAAMzD,GAAN,uBAAA5C,EAAA,yDACP4C,EAAGO,iBADI,EAEkC,EAAKb,MAAM6D,WAA5C1D,EAFD,EAECA,SAAUC,EAFX,EAEWA,SAAUqB,EAFrB,EAEqBA,SACvBtB,GAAaC,GAAaqB,EAHxB,yCAII,EAAKf,SAAS,CAAET,IAAK,6BAJzB,OAMD+D,EAAc,CAAE7D,WAAUC,WAAUqB,YAC1C,EAAKV,MAAMrC,OAAOsF,GAClB,EAAKtD,SAAS,CAAEmD,WAAY,CAAE1D,SAAU,GAAIC,SAAU,GAAIqB,SAAU,MAR7D,2C,wHAbPN,KAAKJ,MAAMpB,c,+BAyBX,IAAIsE,EACI,uBAAM1H,UAAU,cAAc8E,SAAUF,KAAK4C,SAA7C,UACI,uBACIjE,KAAK,OACLU,KAAK,WACLC,MAAOU,KAAKnB,MAAM6D,WAAWpC,SAC7BH,SAAUH,KAAK2C,mBACfvC,YAAY,YACZmC,aAAa,aAEjB,uBACIlD,KAAK,WACLV,KAAK,WACLW,MAAOU,KAAKnB,MAAM6D,WAAWzD,SAC7BkB,SAAUH,KAAK2C,mBACfvC,YAAY,WACZmC,aAAa,qBAEjB,uBACI5D,KAAK,OACLU,KAAK,WACLC,MAAOU,KAAKnB,MAAM6D,WAAW1D,SAC7BmB,SAAUH,KAAK2C,mBACfvC,YAAY,WACZmC,aAAa,aAEjB,uBACA,+CAIJlC,EAAiBL,KAAKJ,MAAtBS,aACR,OACI,sBAAKjF,UAAU,cAAf,UACI,oBAAIA,UAAU,eAAd,qBACA,qBAAKA,UAAU,aAAf,SACI,qBAAKI,IAAKC,GAAKC,IAAI,gBAEtB2E,GACG,sBAAKjF,UAAU,aAAf,UACI,8BACI,0CACaiF,EAAaC,cAG9B,wBAAQlF,UAAU,aAAamF,QAASP,KAAKJ,MAAMtC,OAAnD,wBAGN+C,GAAgByC,S,GAnFZxH,aA+FhBkF,GAAqB,CACvBjD,ONvDG,SAAgBoC,GACrB,8CAAO,WAAMlB,GAAN,eAAAlC,EAAA,+EAEgBa,EAAYG,OAAOoC,GAFnC,OAEG9B,EAFH,OAGHY,EAAS,CAAEE,KAAM,SAAUd,SAHxB,gDAKHjB,QAAQC,IAAI,6BAAZ,MALG,yDAAP,uDMuDE2B,aCnGSuE,GAAS,CAClB,CACIC,KAAM,IACNC,UAAWpH,GAEhB,CACKmH,KAAM,QACNC,UAAWT,IAEf,CACIQ,KAAM,SACNC,UAAWxC,GAEf,CACIuC,KAAM,UACNC,UDuFcvC,aAXE,SAAA7B,GACpB,MAAO,CACHH,MAAOG,EAAM8B,WAAWjC,MACxB2B,aAAcxB,EAAM8B,WAAWN,gBAQQG,GAAzBE,CAA6C+B,MErG5D,SAASS,KACd,OACE,qBAAK9H,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,+BACE,cAAC,IAAD,UACC2H,GAAOX,KAAI,SAAAe,GAAK,OAAI,cAAC,IAAD,CAAwBC,OAAK,EAACH,UAAWE,EAAMF,UAAWD,KAAMG,EAAMH,MAA1DG,EAAMH,aAGzC,iCACE,cAAC,EAAD,WCNUK,QACW,cAA7BpG,OAAOC,SAASoG,UAEe,UAA7BrG,OAAOC,SAASoG,UAEhBrG,OAAOC,SAASoG,SAASC,MAAM,2D,8BCjB/BC,GAAoB,KACpBvF,eAAewF,eAAcD,GAAoBpF,KAAKE,MAAML,eAAewF,eAE/E,IAAMC,GAAe,CACnBrD,aAAcmD,GACd9E,MAAO,ICDT,IAAMiF,GAAmB1G,OAAO2G,sCAAwCC,KAEjEC,GAAcC,aAAgB,CACnCpD,WDCK,WAAyD,IAApC9B,EAAmC,uDAA3B6E,GAAcM,EAAa,uDAAJ,GACzD,OAAQA,EAAOrF,MACb,IAAK,YACH,OAAO,2BAAKE,GAAZ,IAAmBH,MAAOsF,EAAOtF,QACnC,IAAK,WAEL,IAAK,QACH,OAAO,2BAAKG,GAAZ,IAAmBwB,aAAc2D,EAAOnG,OAC1C,IAAK,SACH,OAAO,2BAAKgB,GAAZ,IAAmBwB,aAAc,OACnC,IAAK,SACH,OAAO,2BAAKxB,GAAZ,IAAmBwB,aAAc2D,EAAOnG,OAC1C,QACE,OAAOgB,MCXAoF,GAAQC,aAAYJ,GAAaH,GAAiBQ,aAAgBC,QCEhEC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCEdQ,IAASC,OACP,cAAC,IAAD,CAAUd,MAAOA,GAAjB,SACE,cAACf,GAAD,MAEF8B,SAASC,eAAe,SJkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBZ,MAAK,SAACa,GACLA,EAAaC,gBAEdC,OAAM,SAACC,GACN5I,QAAQ4I,MAAMA,EAAMC,YInH5BpB,O","file":"static/js/main.30d60211.chunk.js","sourcesContent":["import React from 'react'\r\nexport class Footer extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <footer className=\"app-footer\">\r\n                <p>Copyrights Any-Talk by Tal Cohen 2021 &copy; </p>\r\n            </footer>\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/logo.b872e319.jpeg\";","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport img from '../assets/img/logo.jpeg'\r\n\r\nexport class Header extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <header className=\"app-header\">\r\n                <img className=\"logo\" src={img} alt=\"logo\" />\r\n                <nav>\r\n                    <NavLink to=\"/\">Home</NavLink> |\r\n                    <NavLink to=\"/chat\">chat</NavLink> |\r\n                    <NavLink to=\"/login\">Login</NavLink>\r\n                </nav>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport class Hero extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"carousel-container\">\r\n        <div className=\"main-hero-content\">\r\n          <h1>Welcome to Any-Talk!</h1>\r\n        <NavLink className=\"login-btn\" to=\"/login\">Login</NavLink>\r\n        </div>\r\n      \r\n          <Carousel className=\"heros-container\">\r\n            <img src=\"//cdn.pixabay.com/photo/2021/06/18/20/56/social-networks-6347153_960_720.jpg\" alt=\"social-networks\" />\r\n            <img src=\"//cdn.pixabay.com/photo/2016/12/13/07/25/email-1903444_960_720.jpg\" alt=\"email\" />\r\n            <img src=\"//cdn.pixabay.com/photo/2018/11/26/21/28/telephone-3840285_960_720.jpg\" alt=\"telephone\" />\r\n          </Carousel>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { Hero } from '../cmps/Hero'\r\n\r\n\r\nexport class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n                <div className=\"home-section\">\r\n                    <Hero/>\r\n                </div>\r\n                <div className=\"home-desc\">\r\n                <p>Welcome to <span>Any Talk.</span></p>\r\n                <p>Communication platform Anytime, Anywhere </p>\r\n                </div>\r\n                </section>\r\n        )\r\n    }\r\n}\r\n","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import { httpService } from './httpService'\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n}\r\n\r\nwindow.userService = userService\r\n\r\nfunction getUsers() {\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nasync function getLoggedinUser(userId) {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser'))\r\n\r\n}\r\n\r\n","import { userService } from '../../services/userService'\r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadLoggedInUser() {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.getLoggedInUser();\r\n      if (user) {\r\n        dispatch({ type: 'SET_USER', user });\r\n      }\r\n    } catch (err) {\r\n      console.log('User Actions: err in loaded User', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      if (user) {\r\n        dispatch({ type: 'LOGIN', user });\r\n      }\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SIGNUP', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'LOGOUT' });\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/login.ae638c56.png\";","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\nimport {\r\n  loadUsers,\r\n  login,\r\n  logout,\r\n} from '../store/actions/userActions'\r\nimport img from '../assets/img/login.png'\r\n\r\nclass _Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      nickname: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadUsers()\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    const { loginCred } = this.state\r\n    const { nickname, password } = loginCred\r\n    if (!nickname) {\r\n      return this.setState({ msg: 'Please enter nickname' })\r\n    }\r\n    const userCreds = { nickname, password }\r\n    try {\r\n      this.props.login(userCreds)\r\n      this.setState({ loginCred: { nickname: '', password: '' } })\r\n      this.props.history.push('/chat')\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let loginSection = (\r\n      <section>\r\n        <div className=\"login-area\">\r\n          <form onSubmit={this.doLogin}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"nickname\"\r\n              value={this.state.loginCred.nickname}\r\n              onChange={this.loginHandleChange}\r\n              placeholder=\"Nickname\"\r\n              className=\"login-form\"\r\n            />\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={this.state.loginCred.password}\r\n              onChange={this.loginHandleChange}\r\n              placeholder=\"Password\"\r\n              className=\"login-form\"\r\n            />\r\n            <button  className=\"login-btn\">Login</button>\r\n          </form>\r\n        </div>\r\n        <div className=\"signup\" >\r\n          <NavLink className=\"signup-btn\" to=\"/signup\">Create New Account</NavLink>\r\n        </div>\r\n      </section>\r\n    )\r\n\r\n    const { loggedInUser } = this.props\r\n    return (\r\n      <div className=\"login\">\r\n        <h1 className=\"login-title\">Login</h1>\r\n        <div className=\"login-img\">\r\n          <img src={img} alt=\"login img\" />\r\n        </div>\r\n        <p>{this.state.msg}</p>\r\n        {loggedInUser && (\r\n          <div className=\"login-user\">\r\n            <div>\r\n              <h3>\r\n                Welcome {loggedInUser.fullname}\r\n              </h3>\r\n            </div>\r\n            <button className=\"logout-btn\" onClick={this.props.logout}>Logout</button>\r\n          </div>\r\n        )}\r\n        {!loggedInUser && loginSection}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  loadUsers\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n","import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\n export const socketService = createSocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\nvar socketIsReady = false;\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { socketService } from '../services/socketService'\r\nimport ScrollToBottom from 'react-scroll-to-bottom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nclass _Chat extends Component {\r\n  state = {\r\n    msg: { txt: '' },\r\n    msgs: [],\r\n    topic: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    socketService.setup()\r\n    socketService.emit('chat topic', this.state.topic)\r\n    socketService.on('chat addMsg', this.addMsg)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.off('chat addMsg', this.addMsg)\r\n    socketService.terminate()\r\n  }\r\n\r\n  addMsg = newMsg => {\r\n    this.setState(prevState => ({ msgs: [...prevState.msgs, newMsg] }))\r\n  }\r\n\r\n  changeTopic = () => {\r\n    socketService.emit('chat topic', this.state.topic)\r\n  }\r\n\r\n  sendMsg = ev => {\r\n    ev.preventDefault()\r\n    const from =this.props.loggedInUser?.nickname ||'Me'\r\n    socketService.emit('chat newMsg', { from, txt: this.state.msg.txt })\r\n    this.setState({ msg: { from: 'Me', txt: '' } })\r\n  }\r\n\r\n  handleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState({ [name]: value }, this.changeTopic)\r\n  }\r\n\r\n  msgHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => {\r\n      return {\r\n        msg: {\r\n          ...prevState.msg,\r\n          [name]: value\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"chat\">\r\n        <p><span>Any talk</span> Chat</p>\r\n        <div className=\"chat-label\">\r\n          <small>Press here and start to (Any)talk</small>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"topic\"\r\n              value=\"Public\"\r\n              onChange={this.handleChange}\r\n            />\r\n            Public\r\n          </label>\r\n        </div>\r\n        <ScrollToBottom className=\"messages\">\r\n          {this.state.msgs.map((msg, idx) => (\r\n            <li key={idx}>\r\n              <div className=\"message\">\r\n              <Avatar className=\"avatar\"></Avatar>\r\n              <span className=\"message-txt\"> {msg.from} : {msg.txt} </span>\r\n              </div>\r\n              </li>\r\n          ))}\r\n        </ScrollToBottom>\r\n        <form className=\"chat-form\" onSubmit={this.sendMsg}>\r\n          <input\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            className=\"chat-input\"\r\n            value={this.state.msg.txt}\r\n            onChange={this.msgHandleChange}\r\n            name=\"txt\"\r\n            placeholder=\"Enter message\"\r\n          />\r\n          <button>Send</button>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const Chat = connect(mapStateToProps, mapDispatchToProps)(_Chat)\r\n","export default __webpack_public_path__ + \"static/media/signup.e17aaf9b.jpg\";","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    loadUsers,\r\n    signup\r\n} from '../store/actions/userActions'\r\nimport img from '../assets/img/signup.jpg'\r\n\r\nclass _SignUp extends Component {\r\n    state = {\r\n        signupCred: {\r\n            nickname: '',\r\n            password: '',\r\n            fullname: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadUsers()\r\n    }\r\n\r\n    signupHandleChange = ev => {\r\n        const { name, value } = ev.target\r\n        this.setState(prevState => ({\r\n            signupCred: {\r\n                ...prevState.signupCred,\r\n                [name]: value\r\n            }\r\n        }))\r\n    }\r\n\r\n    doSignup = async ev => {\r\n        ev.preventDefault()\r\n        const { nickname, password, fullname } = this.state.signupCred\r\n        if (!nickname || !password || !fullname) {\r\n            return this.setState({ msg: 'All inputs are required' })\r\n        }\r\n        const signupCreds = { nickname, password, fullname }\r\n        this.props.signup(signupCreds)\r\n        this.setState({ signupCred: { nickname: '', password: '', fullname: '' } })\r\n    }\r\n\r\n    render() {\r\n        let signupSection = (\r\n                <form className=\"signup-form\" onSubmit={this.doSignup}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"fullname\"\r\n                        value={this.state.signupCred.fullname}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Full name\"\r\n                        autoComplete=\"fullname\"\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={this.state.signupCred.password}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"nickname\"\r\n                        value={this.state.signupCred.nickname}\r\n                        onChange={this.signupHandleChange}\r\n                        placeholder=\"Nickname\"\r\n                        autoComplete=\"nickname\"\r\n                    />\r\n                    <br />\r\n                    <button>Signup</button>\r\n                </form>\r\n        )\r\n\r\n        const { loggedInUser } = this.props\r\n        return (\r\n            <div className=\"signup-area\">\r\n                <h1 className=\"signup-title\">Sign Up</h1>\r\n                <div className=\"signup-img\">\r\n                    <img src={img} alt=\"login img\" />\r\n                </div>\r\n                {loggedInUser && (\r\n                    <div className=\"login-user\">\r\n                        <div>\r\n                            <h3>\r\n                                Welcome {loggedInUser.fullname}\r\n                            </h3>\r\n                        </div>\r\n                        <button className=\"logout-btn\" onClick={this.props.logout}>Logout</button>\r\n                    </div>\r\n                )}\r\n                {!loggedInUser && signupSection}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        users: state.userModule.users,\r\n        loggedInUser: state.userModule.loggedInUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    loadUsers\r\n}\r\n\r\nexport const SignUp = connect(mapStateToProps, mapDispatchToProps)(_SignUp)\r\n","import { Home } from './pages/Home.jsx'\r\nimport { Login } from './pages/Login.jsx'\r\nimport { Chat } from './pages/Chat'\r\nimport { SignUp } from './pages/SignUp.jsx'\r\n\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n   {\r\n        path: '/chat',\r\n        component: Chat,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/signup',\r\n        component: SignUp,\r\n    },\r\n]\r\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport { Footer } from './cmps/Footer.jsx';\nimport { Header } from './cmps/Header.jsx'\nimport { routes } from './routes.js'\n\n\nexport function App() {\n  return (\n    <div className=\"app\">\n      <Router>\n        <Header />\n        <main>\n          <Switch>\n          {routes.map(route => <Route key={route.path} exact component={route.component} path={route.path} />)}\n          </Switch>\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </Router>\n    </div>\n  )\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","let localLoggedinUser = null\r\nif (sessionStorage.loggedinUser) localLoggedinUser = JSON.parse(sessionStorage.loggedinUser)\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users };\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'LOGIN':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'LOGOUT':\r\n      return { ...state, loggedInUser: null };\r\n    case 'SIGNUP':\r\n      return { ...state, loggedInUser: action.user };\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware,combineReducers, compose } from 'redux'\r\nimport ReduxThunk from 'redux-thunk'\r\nimport { userReducer } from './reducers/userReducer'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\n const rootReducer = combineReducers({\r\n  userModule: userReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(ReduxThunk))) //Passing the reducer\r\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { App } from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './assets/styles/styles.scss'\nimport { store } from './store/store'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.unregister();\n\nreportWebVitals();\n"],"sourceRoot":""}